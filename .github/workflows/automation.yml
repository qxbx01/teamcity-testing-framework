name: Run tests

on:
  workflow_call:
    inputs:
      package:
        description: api | ui
        required: true
        type: string

jobs:
  validate-checkstyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List project files
        run: ls -la

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Validate Checkstyle
        run: ./mvnw validate

      - name: Build Allure Report
        run: ./mvnw allure:report

      - name: Pull latest gh-pages
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"
          git fetch origin gh-pages
          git checkout gh-pages || git checkout --orphan gh-pages
          git pull origin gh-pages --rebase || echo "No remote changes to pull"

      - name: Publish Allure Report
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

  run-tests:
    needs: validate-checkstyle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: TeamCity Setup
        uses: ./.github/actions/teamcity-setup

      - name: Set HOST environment variable
        run: echo "HOST=192.168.178.57:8111" >> $GITHUB_ENV

      - name: Run tests
        continue-on-error: true
        # Указываем группу, чтобы не запустить тесты, связанные с сетапом TeamCity
        run: ./mvnw test -Dtest="com.example.teamcity.${{ inputs.package }}.**" -Dgroups=Regression

      - name: Install Swagger Coverage
        run: |
          wget https://github.com/viclovsky/swagger-coverage/releases/latest/download/swagger-coverage-commandline.zip
          unzip swagger-coverage-commandline.zip -d swagger-coverage
          chmod +x swagger-coverage/bin/swagger-coverage-commandline

      - name: Run Swagger Coverage
        continue-on-error: true
        if: ${{ inputs.package == 'api' }}
        run: swagger-coverage/bin/swagger-coverage-commandline -s http://$HOST:8111/app/rest/swagger.json -i target/swagger-coverage-output

      - name: Save Swagger Coverage
        if: ${{ inputs.package == 'api' && success() }}
        uses: actions/upload-artifact@v4
        with:
          name: swagger-coverage
          path: |
            swagger-coverage-report.html
            swagger-coverage-results.json

      - name: Ensure gh-pages branch exists
        run: |
          git fetch origin gh-pages || git checkout --orphan gh-pages
          git reset --hard
          git commit --allow-empty -m "Initialize gh-pages branch"
          git push origin gh-pages

      - name: Load test report history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Verify Allure results exist
        if: always()
        run: |
          if [ ! -d "target/allure-results" ]; then
            echo "Allure results directory not found!"
            exit 1
          fi

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: target/allure-results
          subfolder: ${{ inputs.package }}

      - name: Pull latest changes from gh-pages
        run: |
          git fetch origin gh-pages
          git checkout gh-pages
          git pull origin gh-pages --rebase

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
